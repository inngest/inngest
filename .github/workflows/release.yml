name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.6.2
      - name: Set sha
        id: sha
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Set tag
        id: tag
        run: echo "tag=$(git describe --tags `git rev-list --tags --max-count=1`)" >> $GITHUB_OUTPUT
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build UI
        run: make build-ui

      - name: Build
        uses: crazy-max/ghaction-xgo@v2
        with:
          xgo_version: latest
          go_version: "1.20"
          dest: build
          prefix: inngest
          pkg: cmd
          targets: linux/arm64,linux/amd64,darwin/arm64,darwin/amd64,windows/amd64
          v: false
          x: false
          race: false
          ldflags: -s -w -X github.com/inngest/inngest/pkg/inngest/version.Version=${{ steps.tag.outputs.tag }} -X github.com/inngest/inngest/pkg/inngest/version.Hash=${{ steps.sha.outputs.sha }}
          buildmode: default
          trimpath: true

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: ./build/*
          retention-days: 1

      - name: Clean UI
        run: git checkout -- .

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser-pro
          version: latest
          args: release --rm-dist --debug
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
  npm:
    runs-on: ubuntu-latest
    needs: [goreleaser]
    defaults:
      run:
        shell: bash
        working-directory: npm
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Node/npm
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install npm dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Release to npm
        run: |
          npm config set git-tag-version false
          npm version ${{ github.ref_name }}

          prerelease=$(echo ${{ github.ref_name }} | awk -F '-' '{print $2}' | awk -F '.' '{print $1}')
          if [ -z "$prerelease" ]; then
            npm publish --access public
          else
            npm publish --tag $prerelease --access public
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

