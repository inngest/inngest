// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: debug/v1/queue.proto

package debug

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Partition
type PartitionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartitionRequest) Reset() {
	*x = PartitionRequest{}
	mi := &file_debug_v1_queue_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionRequest) ProtoMessage() {}

func (x *PartitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debug_v1_queue_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionRequest.ProtoReflect.Descriptor instead.
func (*PartitionRequest) Descriptor() ([]byte, []int) {
	return file_debug_v1_queue_proto_rawDescGZIP(), []int{0}
}

func (x *PartitionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PartitionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Slug          string                 `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Tenant        *PartitionTenant       `protobuf:"bytes,3,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Config        []byte                 `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	QueueShard    *QueueShard            `protobuf:"bytes,5,opt,name=queue_shard,json=queueShard,proto3" json:"queue_shard,omitempty"`
	Crons         []*CronSchedule        `protobuf:"bytes,6,rep,name=crons,proto3" json:"crons,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartitionResponse) Reset() {
	*x = PartitionResponse{}
	mi := &file_debug_v1_queue_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionResponse) ProtoMessage() {}

func (x *PartitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_debug_v1_queue_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionResponse.ProtoReflect.Descriptor instead.
func (*PartitionResponse) Descriptor() ([]byte, []int) {
	return file_debug_v1_queue_proto_rawDescGZIP(), []int{1}
}

func (x *PartitionResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PartitionResponse) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *PartitionResponse) GetTenant() *PartitionTenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

func (x *PartitionResponse) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *PartitionResponse) GetQueueShard() *QueueShard {
	if x != nil {
		return x.QueueShard
	}
	return nil
}

func (x *PartitionResponse) GetCrons() []*CronSchedule {
	if x != nil {
		return x.Crons
	}
	return nil
}

type PartitionStatusResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Paused            bool                   `protobuf:"varint,2,opt,name=paused,proto3" json:"paused,omitempty"`
	Migrate           bool                   `protobuf:"varint,3,opt,name=migrate,proto3" json:"migrate,omitempty"`
	AccountActive     int64                  `protobuf:"varint,4,opt,name=account_active,json=accountActive,proto3" json:"account_active,omitempty"`
	AccountInProgress int64                  `protobuf:"varint,5,opt,name=account_in_progress,json=accountInProgress,proto3" json:"account_in_progress,omitempty"`
	Ready             int64                  `protobuf:"varint,6,opt,name=ready,proto3" json:"ready,omitempty"`
	InProgress        int64                  `protobuf:"varint,7,opt,name=in_progress,json=inProgress,proto3" json:"in_progress,omitempty"`
	Active            int64                  `protobuf:"varint,8,opt,name=active,proto3" json:"active,omitempty"`
	Future            int64                  `protobuf:"varint,9,opt,name=future,proto3" json:"future,omitempty"`
	Backlogs          int64                  `protobuf:"varint,10,opt,name=backlogs,proto3" json:"backlogs,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PartitionStatusResponse) Reset() {
	*x = PartitionStatusResponse{}
	mi := &file_debug_v1_queue_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionStatusResponse) ProtoMessage() {}

func (x *PartitionStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_debug_v1_queue_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionStatusResponse.ProtoReflect.Descriptor instead.
func (*PartitionStatusResponse) Descriptor() ([]byte, []int) {
	return file_debug_v1_queue_proto_rawDescGZIP(), []int{2}
}

func (x *PartitionStatusResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PartitionStatusResponse) GetPaused() bool {
	if x != nil {
		return x.Paused
	}
	return false
}

func (x *PartitionStatusResponse) GetMigrate() bool {
	if x != nil {
		return x.Migrate
	}
	return false
}

func (x *PartitionStatusResponse) GetAccountActive() int64 {
	if x != nil {
		return x.AccountActive
	}
	return 0
}

func (x *PartitionStatusResponse) GetAccountInProgress() int64 {
	if x != nil {
		return x.AccountInProgress
	}
	return 0
}

func (x *PartitionStatusResponse) GetReady() int64 {
	if x != nil {
		return x.Ready
	}
	return 0
}

func (x *PartitionStatusResponse) GetInProgress() int64 {
	if x != nil {
		return x.InProgress
	}
	return 0
}

func (x *PartitionStatusResponse) GetActive() int64 {
	if x != nil {
		return x.Active
	}
	return 0
}

func (x *PartitionStatusResponse) GetFuture() int64 {
	if x != nil {
		return x.Future
	}
	return 0
}

func (x *PartitionStatusResponse) GetBacklogs() int64 {
	if x != nil {
		return x.Backlogs
	}
	return 0
}

type PartitionTenant struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountId     string                 `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	EnvId         string                 `protobuf:"bytes,2,opt,name=env_id,json=envId,proto3" json:"env_id,omitempty"`
	AppId         string                 `protobuf:"bytes,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartitionTenant) Reset() {
	*x = PartitionTenant{}
	mi := &file_debug_v1_queue_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionTenant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionTenant) ProtoMessage() {}

func (x *PartitionTenant) ProtoReflect() protoreflect.Message {
	mi := &file_debug_v1_queue_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionTenant.ProtoReflect.Descriptor instead.
func (*PartitionTenant) Descriptor() ([]byte, []int) {
	return file_debug_v1_queue_proto_rawDescGZIP(), []int{3}
}

func (x *PartitionTenant) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *PartitionTenant) GetEnvId() string {
	if x != nil {
		return x.EnvId
	}
	return ""
}

func (x *PartitionTenant) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type QueueShard struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Kind          string                 `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueueShard) Reset() {
	*x = QueueShard{}
	mi := &file_debug_v1_queue_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueShard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueShard) ProtoMessage() {}

func (x *QueueShard) ProtoReflect() protoreflect.Message {
	mi := &file_debug_v1_queue_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueShard.ProtoReflect.Descriptor instead.
func (*QueueShard) Descriptor() ([]byte, []int) {
	return file_debug_v1_queue_proto_rawDescGZIP(), []int{4}
}

func (x *QueueShard) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueueShard) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

type CronSchedule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Next          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=next,proto3" json:"next,omitempty"`
	JobId         string                 `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Expr          string                 `protobuf:"bytes,3,opt,name=expr,proto3" json:"expr,omitempty"`
	Scheduled     bool                   `protobuf:"varint,4,opt,name=scheduled,proto3" json:"scheduled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CronSchedule) Reset() {
	*x = CronSchedule{}
	mi := &file_debug_v1_queue_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CronSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronSchedule) ProtoMessage() {}

func (x *CronSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_debug_v1_queue_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronSchedule.ProtoReflect.Descriptor instead.
func (*CronSchedule) Descriptor() ([]byte, []int) {
	return file_debug_v1_queue_proto_rawDescGZIP(), []int{5}
}

func (x *CronSchedule) GetNext() *timestamppb.Timestamp {
	if x != nil {
		return x.Next
	}
	return nil
}

func (x *CronSchedule) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *CronSchedule) GetExpr() string {
	if x != nil {
		return x.Expr
	}
	return ""
}

func (x *CronSchedule) GetScheduled() bool {
	if x != nil {
		return x.Scheduled
	}
	return false
}

// Item
type QueueItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemId        string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	RunId         string                 `protobuf:"bytes,2,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	QueueShard    string                 `protobuf:"bytes,3,opt,name=queue_shard,json=queueShard,proto3" json:"queue_shard,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueueItemRequest) Reset() {
	*x = QueueItemRequest{}
	mi := &file_debug_v1_queue_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueItemRequest) ProtoMessage() {}

func (x *QueueItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debug_v1_queue_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueItemRequest.ProtoReflect.Descriptor instead.
func (*QueueItemRequest) Descriptor() ([]byte, []int) {
	return file_debug_v1_queue_proto_rawDescGZIP(), []int{6}
}

func (x *QueueItemRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *QueueItemRequest) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *QueueItemRequest) GetQueueShard() string {
	if x != nil {
		return x.QueueShard
	}
	return ""
}

type QueueItemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueueItemResponse) Reset() {
	*x = QueueItemResponse{}
	mi := &file_debug_v1_queue_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueItemResponse) ProtoMessage() {}

func (x *QueueItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_debug_v1_queue_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueItemResponse.ProtoReflect.Descriptor instead.
func (*QueueItemResponse) Descriptor() ([]byte, []int) {
	return file_debug_v1_queue_proto_rawDescGZIP(), []int{7}
}

func (x *QueueItemResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_debug_v1_queue_proto protoreflect.FileDescriptor

const file_debug_v1_queue_proto_rawDesc = "" +
	"\n" +
	"\x14debug/v1/queue.proto\x12\bdebug.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\"\n" +
	"\x10PartitionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xe7\x01\n" +
	"\x11PartitionResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04slug\x18\x02 \x01(\tR\x04slug\x121\n" +
	"\x06tenant\x18\x03 \x01(\v2\x19.debug.v1.PartitionTenantR\x06tenant\x12\x16\n" +
	"\x06config\x18\x04 \x01(\fR\x06config\x125\n" +
	"\vqueue_shard\x18\x05 \x01(\v2\x14.debug.v1.QueueShardR\n" +
	"queueShard\x12,\n" +
	"\x05crons\x18\x06 \x03(\v2\x16.debug.v1.CronScheduleR\x05crons\"\xb5\x02\n" +
	"\x17PartitionStatusResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06paused\x18\x02 \x01(\bR\x06paused\x12\x18\n" +
	"\amigrate\x18\x03 \x01(\bR\amigrate\x12%\n" +
	"\x0eaccount_active\x18\x04 \x01(\x03R\raccountActive\x12.\n" +
	"\x13account_in_progress\x18\x05 \x01(\x03R\x11accountInProgress\x12\x14\n" +
	"\x05ready\x18\x06 \x01(\x03R\x05ready\x12\x1f\n" +
	"\vin_progress\x18\a \x01(\x03R\n" +
	"inProgress\x12\x16\n" +
	"\x06active\x18\b \x01(\x03R\x06active\x12\x16\n" +
	"\x06future\x18\t \x01(\x03R\x06future\x12\x1a\n" +
	"\bbacklogs\x18\n" +
	" \x01(\x03R\bbacklogs\"^\n" +
	"\x0fPartitionTenant\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x12\x15\n" +
	"\x06env_id\x18\x02 \x01(\tR\x05envId\x12\x15\n" +
	"\x06app_id\x18\x03 \x01(\tR\x05appId\"4\n" +
	"\n" +
	"QueueShard\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04kind\x18\x02 \x01(\tR\x04kind\"\x87\x01\n" +
	"\fCronSchedule\x12.\n" +
	"\x04next\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x04next\x12\x15\n" +
	"\x06job_id\x18\x02 \x01(\tR\x05jobId\x12\x12\n" +
	"\x04expr\x18\x03 \x01(\tR\x04expr\x12\x1c\n" +
	"\tscheduled\x18\x04 \x01(\bR\tscheduled\"c\n" +
	"\x10QueueItemRequest\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x12\x15\n" +
	"\x06run_id\x18\x02 \x01(\tR\x05runId\x12\x1f\n" +
	"\vqueue_shard\x18\x03 \x01(\tR\n" +
	"queueShard\"'\n" +
	"\x11QueueItemResponse\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04dataB5Z3github.com/inngest/inngest/proto/gen/debug/v1;debugb\x06proto3"

var (
	file_debug_v1_queue_proto_rawDescOnce sync.Once
	file_debug_v1_queue_proto_rawDescData []byte
)

func file_debug_v1_queue_proto_rawDescGZIP() []byte {
	file_debug_v1_queue_proto_rawDescOnce.Do(func() {
		file_debug_v1_queue_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_debug_v1_queue_proto_rawDesc), len(file_debug_v1_queue_proto_rawDesc)))
	})
	return file_debug_v1_queue_proto_rawDescData
}

var file_debug_v1_queue_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_debug_v1_queue_proto_goTypes = []any{
	(*PartitionRequest)(nil),        // 0: debug.v1.PartitionRequest
	(*PartitionResponse)(nil),       // 1: debug.v1.PartitionResponse
	(*PartitionStatusResponse)(nil), // 2: debug.v1.PartitionStatusResponse
	(*PartitionTenant)(nil),         // 3: debug.v1.PartitionTenant
	(*QueueShard)(nil),              // 4: debug.v1.QueueShard
	(*CronSchedule)(nil),            // 5: debug.v1.CronSchedule
	(*QueueItemRequest)(nil),        // 6: debug.v1.QueueItemRequest
	(*QueueItemResponse)(nil),       // 7: debug.v1.QueueItemResponse
	(*timestamppb.Timestamp)(nil),   // 8: google.protobuf.Timestamp
}
var file_debug_v1_queue_proto_depIdxs = []int32{
	3, // 0: debug.v1.PartitionResponse.tenant:type_name -> debug.v1.PartitionTenant
	4, // 1: debug.v1.PartitionResponse.queue_shard:type_name -> debug.v1.QueueShard
	5, // 2: debug.v1.PartitionResponse.crons:type_name -> debug.v1.CronSchedule
	8, // 3: debug.v1.CronSchedule.next:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_debug_v1_queue_proto_init() }
func file_debug_v1_queue_proto_init() {
	if File_debug_v1_queue_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_debug_v1_queue_proto_rawDesc), len(file_debug_v1_queue_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_debug_v1_queue_proto_goTypes,
		DependencyIndexes: file_debug_v1_queue_proto_depIdxs,
		MessageInfos:      file_debug_v1_queue_proto_msgTypes,
	}.Build()
	File_debug_v1_queue_proto = out.File
	file_debug_v1_queue_proto_goTypes = nil
	file_debug_v1_queue_proto_depIdxs = nil
}
