// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: connect/v1/connect.proto

package connect

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GatewayMessageType int32

const (
	GatewayMessageType_GATEWAY_HELLO            GatewayMessageType = 0
	GatewayMessageType_WORKER_CONNECT           GatewayMessageType = 1
	GatewayMessageType_GATEWAY_CONNECTION_READY GatewayMessageType = 2
	GatewayMessageType_GATEWAY_EXECUTOR_REQUEST GatewayMessageType = 3
	GatewayMessageType_WORKER_READY             GatewayMessageType = 4
	GatewayMessageType_WORKER_REQUEST_ACK       GatewayMessageType = 5
	GatewayMessageType_WORKER_REPLY             GatewayMessageType = 6
	GatewayMessageType_WORKER_PAUSE             GatewayMessageType = 7
	GatewayMessageType_WORKER_HEARTBEAT         GatewayMessageType = 8
	GatewayMessageType_GATEWAY_CLOSING          GatewayMessageType = 9
)

// Enum value maps for GatewayMessageType.
var (
	GatewayMessageType_name = map[int32]string{
		0: "GATEWAY_HELLO",
		1: "WORKER_CONNECT",
		2: "GATEWAY_CONNECTION_READY",
		3: "GATEWAY_EXECUTOR_REQUEST",
		4: "WORKER_READY",
		5: "WORKER_REQUEST_ACK",
		6: "WORKER_REPLY",
		7: "WORKER_PAUSE",
		8: "WORKER_HEARTBEAT",
		9: "GATEWAY_CLOSING",
	}
	GatewayMessageType_value = map[string]int32{
		"GATEWAY_HELLO":            0,
		"WORKER_CONNECT":           1,
		"GATEWAY_CONNECTION_READY": 2,
		"GATEWAY_EXECUTOR_REQUEST": 3,
		"WORKER_READY":             4,
		"WORKER_REQUEST_ACK":       5,
		"WORKER_REPLY":             6,
		"WORKER_PAUSE":             7,
		"WORKER_HEARTBEAT":         8,
		"GATEWAY_CLOSING":          9,
	}
)

func (x GatewayMessageType) Enum() *GatewayMessageType {
	p := new(GatewayMessageType)
	*p = x
	return p
}

func (x GatewayMessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GatewayMessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_connect_v1_connect_proto_enumTypes[0].Descriptor()
}

func (GatewayMessageType) Type() protoreflect.EnumType {
	return &file_connect_v1_connect_proto_enumTypes[0]
}

func (x GatewayMessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GatewayMessageType.Descriptor instead.
func (GatewayMessageType) EnumDescriptor() ([]byte, []int) {
	return file_connect_v1_connect_proto_rawDescGZIP(), []int{0}
}

type SDKResponseStatus int32

const (
	SDKResponseStatus_NOT_COMPLETED SDKResponseStatus = 0
	SDKResponseStatus_DONE          SDKResponseStatus = 1
	SDKResponseStatus_ERROR         SDKResponseStatus = 2
)

// Enum value maps for SDKResponseStatus.
var (
	SDKResponseStatus_name = map[int32]string{
		0: "NOT_COMPLETED",
		1: "DONE",
		2: "ERROR",
	}
	SDKResponseStatus_value = map[string]int32{
		"NOT_COMPLETED": 0,
		"DONE":          1,
		"ERROR":         2,
	}
)

func (x SDKResponseStatus) Enum() *SDKResponseStatus {
	p := new(SDKResponseStatus)
	*p = x
	return p
}

func (x SDKResponseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SDKResponseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_connect_v1_connect_proto_enumTypes[1].Descriptor()
}

func (SDKResponseStatus) Type() protoreflect.EnumType {
	return &file_connect_v1_connect_proto_enumTypes[1]
}

func (x SDKResponseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SDKResponseStatus.Descriptor instead.
func (SDKResponseStatus) EnumDescriptor() ([]byte, []int) {
	return file_connect_v1_connect_proto_rawDescGZIP(), []int{1}
}

type ConnectionStatus int32

const (
	ConnectionStatus_CONNECTED    ConnectionStatus = 0
	ConnectionStatus_READY        ConnectionStatus = 1
	ConnectionStatus_DRAINING     ConnectionStatus = 2
	ConnectionStatus_DISCONNECTED ConnectionStatus = 3
)

// Enum value maps for ConnectionStatus.
var (
	ConnectionStatus_name = map[int32]string{
		0: "CONNECTED",
		1: "READY",
		2: "DRAINING",
		3: "DISCONNECTED",
	}
	ConnectionStatus_value = map[string]int32{
		"CONNECTED":    0,
		"READY":        1,
		"DRAINING":     2,
		"DISCONNECTED": 3,
	}
)

func (x ConnectionStatus) Enum() *ConnectionStatus {
	p := new(ConnectionStatus)
	*p = x
	return p
}

func (x ConnectionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_connect_v1_connect_proto_enumTypes[2].Descriptor()
}

func (ConnectionStatus) Type() protoreflect.EnumType {
	return &file_connect_v1_connect_proto_enumTypes[2]
}

func (x ConnectionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectionStatus.Descriptor instead.
func (ConnectionStatus) EnumDescriptor() ([]byte, []int) {
	return file_connect_v1_connect_proto_rawDescGZIP(), []int{2}
}

type WorkerDisconnectReason int32

const (
	WorkerDisconnectReason_WORKER_SHUTDOWN WorkerDisconnectReason = 0
)

// Enum value maps for WorkerDisconnectReason.
var (
	WorkerDisconnectReason_name = map[int32]string{
		0: "WORKER_SHUTDOWN",
	}
	WorkerDisconnectReason_value = map[string]int32{
		"WORKER_SHUTDOWN": 0,
	}
)

func (x WorkerDisconnectReason) Enum() *WorkerDisconnectReason {
	p := new(WorkerDisconnectReason)
	*p = x
	return p
}

func (x WorkerDisconnectReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkerDisconnectReason) Descriptor() protoreflect.EnumDescriptor {
	return file_connect_v1_connect_proto_enumTypes[3].Descriptor()
}

func (WorkerDisconnectReason) Type() protoreflect.EnumType {
	return &file_connect_v1_connect_proto_enumTypes[3]
}

func (x WorkerDisconnectReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkerDisconnectReason.Descriptor instead.
func (WorkerDisconnectReason) EnumDescriptor() ([]byte, []int) {
	return file_connect_v1_connect_proto_rawDescGZIP(), []int{3}
}

type ConnectMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind    GatewayMessageType `protobuf:"varint,1,opt,name=kind,proto3,enum=connect.v1.GatewayMessageType" json:"kind,omitempty"`
	Payload []byte             `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ConnectMessage) Reset() {
	*x = ConnectMessage{}
	mi := &file_connect_v1_connect_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectMessage) ProtoMessage() {}

func (x *ConnectMessage) ProtoReflect() protoreflect.Message {
	mi := &file_connect_v1_connect_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectMessage.ProtoReflect.Descriptor instead.
func (*ConnectMessage) Descriptor() ([]byte, []int) {
	return file_connect_v1_connect_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectMessage) GetKind() GatewayMessageType {
	if x != nil {
		return x.Kind
	}
	return GatewayMessageType_GATEWAY_HELLO
}

func (x *ConnectMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type SessionIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId   string  `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	ConnectionId string  `protobuf:"bytes,2,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	BuildId      *string `protobuf:"bytes,4,opt,name=build_id,json=buildId,proto3,oneof" json:"build_id,omitempty"`
}

func (x *SessionIdentifier) Reset() {
	*x = SessionIdentifier{}
	mi := &file_connect_v1_connect_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionIdentifier) ProtoMessage() {}

func (x *SessionIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_connect_v1_connect_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionIdentifier.ProtoReflect.Descriptor instead.
func (*SessionIdentifier) Descriptor() ([]byte, []int) {
	return file_connect_v1_connect_proto_rawDescGZIP(), []int{1}
}

func (x *SessionIdentifier) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *SessionIdentifier) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *SessionIdentifier) GetBuildId() string {
	if x != nil && x.BuildId != nil {
		return *x.BuildId
	}
	return ""
}

type SessionDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId    *SessionIdentifier `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	FunctionHash []byte             `protobuf:"bytes,3,opt,name=function_hash,json=functionHash,proto3" json:"function_hash,omitempty"`
}

func (x *SessionDetails) Reset() {
	*x = SessionDetails{}
	mi := &file_connect_v1_connect_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionDetails) ProtoMessage() {}

func (x *SessionDetails) ProtoReflect() protoreflect.Message {
	mi := &file_connect_v1_connect_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionDetails.ProtoReflect.Descriptor instead.
func (*SessionDetails) Descriptor() ([]byte, []int) {
	return file_connect_v1_connect_proto_rawDescGZIP(), []int{2}
}

func (x *SessionDetails) GetSessionId() *SessionIdentifier {
	if x != nil {
		return x.SessionId
	}
	return nil
}

func (x *SessionDetails) GetFunctionHash() []byte {
	if x != nil {
		return x.FunctionHash
	}
	return nil
}

type ConfigDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Capabilities []byte `protobuf:"bytes,1,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	Functions    []byte `protobuf:"bytes,2,opt,name=functions,proto3" json:"functions,omitempty"`
	ApiOrigin    string `protobuf:"bytes,3,opt,name=api_origin,json=apiOrigin,proto3" json:"api_origin,omitempty"`
}

func (x *ConfigDetails) Reset() {
	*x = ConfigDetails{}
	mi := &file_connect_v1_connect_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDetails) ProtoMessage() {}

func (x *ConfigDetails) ProtoReflect() protoreflect.Message {
	mi := &file_connect_v1_connect_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDetails.ProtoReflect.Descriptor instead.
func (*ConfigDetails) Descriptor() ([]byte, []int) {
	return file_connect_v1_connect_proto_rawDescGZIP(), []int{3}
}

func (x *ConfigDetails) GetCapabilities() []byte {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *ConfigDetails) GetFunctions() []byte {
	if x != nil {
		return x.Functions
	}
	return nil
}

func (x *ConfigDetails) GetApiOrigin() string {
	if x != nil {
		return x.ApiOrigin
	}
	return ""
}

type AuthData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HashedSigningKey []byte `protobuf:"bytes,1,opt,name=hashed_signing_key,json=hashedSigningKey,proto3" json:"hashed_signing_key,omitempty"`
	AccountId        string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	EnvId            string `protobuf:"bytes,3,opt,name=env_id,json=envId,proto3" json:"env_id,omitempty"`
}

func (x *AuthData) Reset() {
	*x = AuthData{}
	mi := &file_connect_v1_connect_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthData) ProtoMessage() {}

func (x *AuthData) ProtoReflect() protoreflect.Message {
	mi := &file_connect_v1_connect_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthData.ProtoReflect.Descriptor instead.
func (*AuthData) Descriptor() ([]byte, []int) {
	return file_connect_v1_connect_proto_rawDescGZIP(), []int{4}
}

func (x *AuthData) GetHashedSigningKey() []byte {
	if x != nil {
		return x.HashedSigningKey
	}
	return nil
}

func (x *AuthData) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AuthData) GetEnvId() string {
	if x != nil {
		return x.EnvId
	}
	return ""
}

type WorkerConnectRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId                *SessionIdentifier `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	AuthData                 *AuthData          `protobuf:"bytes,2,opt,name=auth_data,json=authData,proto3" json:"auth_data,omitempty"`
	AppName                  string             `protobuf:"bytes,3,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	Config                   *ConfigDetails     `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	WorkerManualReadinessAck bool               `protobuf:"varint,5,opt,name=worker_manual_readiness_ack,json=workerManualReadinessAck,proto3" json:"worker_manual_readiness_ack,omitempty"`
	SystemAttributes         *SystemAttributes  `protobuf:"bytes,6,opt,name=system_attributes,json=systemAttributes,proto3" json:"system_attributes,omitempty"`
	Environment              *string            `protobuf:"bytes,7,opt,name=environment,proto3,oneof" json:"environment,omitempty"`
	Framework                string             `protobuf:"bytes,8,opt,name=framework,proto3" json:"framework,omitempty"`
	Platform                 *string            `protobuf:"bytes,9,opt,name=platform,proto3,oneof" json:"platform,omitempty"`
	SdkVersion               string             `protobuf:"bytes,10,opt,name=sdk_version,json=sdkVersion,proto3" json:"sdk_version,omitempty"`
	SdkLanguage              string             `protobuf:"bytes,11,opt,name=sdk_language,json=sdkLanguage,proto3" json:"sdk_language,omitempty"`
}

func (x *WorkerConnectRequestData) Reset() {
	*x = WorkerConnectRequestData{}
	mi := &file_connect_v1_connect_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerConnectRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerConnectRequestData) ProtoMessage() {}

func (x *WorkerConnectRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_connect_v1_connect_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerConnectRequestData.ProtoReflect.Descriptor instead.
func (*WorkerConnectRequestData) Descriptor() ([]byte, []int) {
	return file_connect_v1_connect_proto_rawDescGZIP(), []int{5}
}

func (x *WorkerConnectRequestData) GetSessionId() *SessionIdentifier {
	if x != nil {
		return x.SessionId
	}
	return nil
}

func (x *WorkerConnectRequestData) GetAuthData() *AuthData {
	if x != nil {
		return x.AuthData
	}
	return nil
}

func (x *WorkerConnectRequestData) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *WorkerConnectRequestData) GetConfig() *ConfigDetails {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *WorkerConnectRequestData) GetWorkerManualReadinessAck() bool {
	if x != nil {
		return x.WorkerManualReadinessAck
	}
	return false
}

func (x *WorkerConnectRequestData) GetSystemAttributes() *SystemAttributes {
	if x != nil {
		return x.SystemAttributes
	}
	return nil
}

func (x *WorkerConnectRequestData) GetEnvironment() string {
	if x != nil && x.Environment != nil {
		return *x.Environment
	}
	return ""
}

func (x *WorkerConnectRequestData) GetFramework() string {
	if x != nil {
		return x.Framework
	}
	return ""
}

func (x *WorkerConnectRequestData) GetPlatform() string {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return ""
}

func (x *WorkerConnectRequestData) GetSdkVersion() string {
	if x != nil {
		return x.SdkVersion
	}
	return ""
}

func (x *WorkerConnectRequestData) GetSdkLanguage() string {
	if x != nil {
		return x.SdkLanguage
	}
	return ""
}

type GatewaySyncRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeployId *string `protobuf:"bytes,1,opt,name=deploy_id,json=deployId,proto3,oneof" json:"deploy_id,omitempty"`
}

func (x *GatewaySyncRequestData) Reset() {
	*x = GatewaySyncRequestData{}
	mi := &file_connect_v1_connect_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GatewaySyncRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewaySyncRequestData) ProtoMessage() {}

func (x *GatewaySyncRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_connect_v1_connect_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewaySyncRequestData.ProtoReflect.Descriptor instead.
func (*GatewaySyncRequestData) Descriptor() ([]byte, []int) {
	return file_connect_v1_connect_proto_rawDescGZIP(), []int{6}
}

func (x *GatewaySyncRequestData) GetDeployId() string {
	if x != nil && x.DeployId != nil {
		return *x.DeployId
	}
	return ""
}

type GatewayExecutorRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId      string  `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	EnvId          string  `protobuf:"bytes,2,opt,name=env_id,json=envId,proto3" json:"env_id,omitempty"`
	AppId          string  `protobuf:"bytes,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	FunctionSlug   string  `protobuf:"bytes,4,opt,name=function_slug,json=functionSlug,proto3" json:"function_slug,omitempty"`
	StepId         *string `protobuf:"bytes,5,opt,name=step_id,json=stepId,proto3,oneof" json:"step_id,omitempty"`
	RequestPayload []byte  `protobuf:"bytes,6,opt,name=request_payload,json=requestPayload,proto3" json:"request_payload,omitempty"`
}

func (x *GatewayExecutorRequestData) Reset() {
	*x = GatewayExecutorRequestData{}
	mi := &file_connect_v1_connect_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GatewayExecutorRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayExecutorRequestData) ProtoMessage() {}

func (x *GatewayExecutorRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_connect_v1_connect_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayExecutorRequestData.ProtoReflect.Descriptor instead.
func (*GatewayExecutorRequestData) Descriptor() ([]byte, []int) {
	return file_connect_v1_connect_proto_rawDescGZIP(), []int{7}
}

func (x *GatewayExecutorRequestData) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *GatewayExecutorRequestData) GetEnvId() string {
	if x != nil {
		return x.EnvId
	}
	return ""
}

func (x *GatewayExecutorRequestData) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *GatewayExecutorRequestData) GetFunctionSlug() string {
	if x != nil {
		return x.FunctionSlug
	}
	return ""
}

func (x *GatewayExecutorRequestData) GetStepId() string {
	if x != nil && x.StepId != nil {
		return *x.StepId
	}
	return ""
}

func (x *GatewayExecutorRequestData) GetRequestPayload() []byte {
	if x != nil {
		return x.RequestPayload
	}
	return nil
}

type WorkerRequestAckData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId    string  `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	AppId        string  `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	FunctionSlug string  `protobuf:"bytes,3,opt,name=function_slug,json=functionSlug,proto3" json:"function_slug,omitempty"`
	StepId       *string `protobuf:"bytes,4,opt,name=step_id,json=stepId,proto3,oneof" json:"step_id,omitempty"`
}

func (x *WorkerRequestAckData) Reset() {
	*x = WorkerRequestAckData{}
	mi := &file_connect_v1_connect_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerRequestAckData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerRequestAckData) ProtoMessage() {}

func (x *WorkerRequestAckData) ProtoReflect() protoreflect.Message {
	mi := &file_connect_v1_connect_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerRequestAckData.ProtoReflect.Descriptor instead.
func (*WorkerRequestAckData) Descriptor() ([]byte, []int) {
	return file_connect_v1_connect_proto_rawDescGZIP(), []int{8}
}

func (x *WorkerRequestAckData) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *WorkerRequestAckData) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *WorkerRequestAckData) GetFunctionSlug() string {
	if x != nil {
		return x.FunctionSlug
	}
	return ""
}

func (x *WorkerRequestAckData) GetStepId() string {
	if x != nil && x.StepId != nil {
		return *x.StepId
	}
	return ""
}

type SDKResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId  string            `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Status     SDKResponseStatus `protobuf:"varint,2,opt,name=status,proto3,enum=connect.v1.SDKResponseStatus" json:"status,omitempty"`
	Body       []byte            `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	NoRetry    bool              `protobuf:"varint,4,opt,name=no_retry,json=noRetry,proto3" json:"no_retry,omitempty"`
	RetryAfter *string           `protobuf:"bytes,5,opt,name=retry_after,json=retryAfter,proto3,oneof" json:"retry_after,omitempty"`
	SdkVersion string            `protobuf:"bytes,6,opt,name=sdk_version,json=sdkVersion,proto3" json:"sdk_version,omitempty"`
}

func (x *SDKResponse) Reset() {
	*x = SDKResponse{}
	mi := &file_connect_v1_connect_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SDKResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDKResponse) ProtoMessage() {}

func (x *SDKResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connect_v1_connect_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDKResponse.ProtoReflect.Descriptor instead.
func (*SDKResponse) Descriptor() ([]byte, []int) {
	return file_connect_v1_connect_proto_rawDescGZIP(), []int{9}
}

func (x *SDKResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *SDKResponse) GetStatus() SDKResponseStatus {
	if x != nil {
		return x.Status
	}
	return SDKResponseStatus_NOT_COMPLETED
}

func (x *SDKResponse) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *SDKResponse) GetNoRetry() bool {
	if x != nil {
		return x.NoRetry
	}
	return false
}

func (x *SDKResponse) GetRetryAfter() string {
	if x != nil && x.RetryAfter != nil {
		return *x.RetryAfter
	}
	return ""
}

func (x *SDKResponse) GetSdkVersion() string {
	if x != nil {
		return x.SdkVersion
	}
	return ""
}

// Connection metadata
type ConnMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GatewayId       string                 `protobuf:"bytes,2,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	InstanceId      string                 `protobuf:"bytes,3,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	GroupId         string                 `protobuf:"bytes,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Status          ConnectionStatus       `protobuf:"varint,5,opt,name=status,proto3,enum=connect.v1.ConnectionStatus" json:"status,omitempty"`
	LastHeartbeatAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_heartbeat_at,json=lastHeartbeatAt,proto3" json:"last_heartbeat_at,omitempty"`
	Language        string                 `protobuf:"bytes,7,opt,name=language,proto3" json:"language,omitempty"`
	Version         string                 `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`
	Attributes      *SystemAttributes      `protobuf:"bytes,9,opt,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *ConnMetadata) Reset() {
	*x = ConnMetadata{}
	mi := &file_connect_v1_connect_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnMetadata) ProtoMessage() {}

func (x *ConnMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_connect_v1_connect_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnMetadata.ProtoReflect.Descriptor instead.
func (*ConnMetadata) Descriptor() ([]byte, []int) {
	return file_connect_v1_connect_proto_rawDescGZIP(), []int{10}
}

func (x *ConnMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConnMetadata) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *ConnMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *ConnMetadata) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *ConnMetadata) GetStatus() ConnectionStatus {
	if x != nil {
		return x.Status
	}
	return ConnectionStatus_CONNECTED
}

func (x *ConnMetadata) GetLastHeartbeatAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastHeartbeatAt
	}
	return nil
}

func (x *ConnMetadata) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *ConnMetadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ConnMetadata) GetAttributes() *SystemAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type SystemAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuCores int32  `protobuf:"varint,1,opt,name=cpu_cores,json=cpuCores,proto3" json:"cpu_cores,omitempty"`
	MemBytes int64  `protobuf:"varint,2,opt,name=mem_bytes,json=memBytes,proto3" json:"mem_bytes,omitempty"`
	Os       string `protobuf:"bytes,3,opt,name=os,proto3" json:"os,omitempty"`
}

func (x *SystemAttributes) Reset() {
	*x = SystemAttributes{}
	mi := &file_connect_v1_connect_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemAttributes) ProtoMessage() {}

func (x *SystemAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_connect_v1_connect_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemAttributes.ProtoReflect.Descriptor instead.
func (*SystemAttributes) Descriptor() ([]byte, []int) {
	return file_connect_v1_connect_proto_rawDescGZIP(), []int{11}
}

func (x *SystemAttributes) GetCpuCores() int32 {
	if x != nil {
		return x.CpuCores
	}
	return 0
}

func (x *SystemAttributes) GetMemBytes() int64 {
	if x != nil {
		return x.MemBytes
	}
	return 0
}

func (x *SystemAttributes) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

type ConnGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvId   string          `protobuf:"bytes,1,opt,name=env_id,json=envId,proto3" json:"env_id,omitempty"`
	AppId   string          `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Hash    string          `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	Conns   []*ConnMetadata `protobuf:"bytes,4,rep,name=conns,proto3" json:"conns,omitempty"`
	SyncId  *string         `protobuf:"bytes,5,opt,name=sync_id,json=syncId,proto3,oneof" json:"sync_id,omitempty"`
	BuildId *string         `protobuf:"bytes,6,opt,name=build_id,json=buildId,proto3,oneof" json:"build_id,omitempty"`
}

func (x *ConnGroup) Reset() {
	*x = ConnGroup{}
	mi := &file_connect_v1_connect_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnGroup) ProtoMessage() {}

func (x *ConnGroup) ProtoReflect() protoreflect.Message {
	mi := &file_connect_v1_connect_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnGroup.ProtoReflect.Descriptor instead.
func (*ConnGroup) Descriptor() ([]byte, []int) {
	return file_connect_v1_connect_proto_rawDescGZIP(), []int{12}
}

func (x *ConnGroup) GetEnvId() string {
	if x != nil {
		return x.EnvId
	}
	return ""
}

func (x *ConnGroup) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ConnGroup) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *ConnGroup) GetConns() []*ConnMetadata {
	if x != nil {
		return x.Conns
	}
	return nil
}

func (x *ConnGroup) GetSyncId() string {
	if x != nil && x.SyncId != nil {
		return *x.SyncId
	}
	return ""
}

func (x *ConnGroup) GetBuildId() string {
	if x != nil && x.BuildId != nil {
		return *x.BuildId
	}
	return ""
}

var File_connect_v1_connect_proto protoreflect.FileDescriptor

var file_connect_v1_connect_proto_rawDesc = []byte{
	0x0a, 0x18, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5e, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64,
	0x22, 0x73, 0x0a, 0x0e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x3c, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x61, 0x73, 0x68, 0x22, 0x70, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x63, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x5f,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70,
	0x69, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0x6e, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x12, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x73, 0x69,
	0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x10, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4b, 0x65,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x22, 0xaa, 0x04, 0x0a, 0x18, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x31, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x61, 0x75, 0x74,
	0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x31, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x3d, 0x0a, 0x1b, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x6d, 0x61,
	0x6e, 0x75, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x61,
	0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41,
	0x63, 0x6b, 0x12, 0x49, 0x0a, 0x11, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x10, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x25, 0x0a,
	0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x64, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x64, 0x6b, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x64, 0x6b, 0x5f, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x64, 0x6b, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x22, 0x48, 0x0a, 0x16, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53,
	0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20,
	0x0a, 0x09, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x08, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x69, 0x64, 0x22, 0xe1,
	0x01, 0x0a, 0x1a, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x65, 0x6e, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e,
	0x76, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6c, 0x75, 0x67, 0x12,
	0x1c, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x65, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a,
	0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x5f,
	0x69, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x14, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x6c,
	0x75, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x65, 0x70, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x69, 0x64,
	0x22, 0xe9, 0x01, 0x0a, 0x0b, 0x53, 0x44, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x44, 0x4b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f,
	0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x6f,
	0x52, 0x65, 0x74, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65,
	0x74, 0x72, 0x79, 0x41, 0x66, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x64, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x64, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x22, 0xeb, 0x02, 0x0a,
	0x0c, 0x43, 0x6f, 0x6e, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x46,
	0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0a,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x5c, 0x0a, 0x10, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x63, 0x70, 0x75, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x65, 0x6d, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6d, 0x65, 0x6d, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x22, 0xd4, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x76, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x2e, 0x0a, 0x05, 0x63, 0x6f, 0x6e, 0x6e,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x05, 0x63, 0x6f, 0x6e, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x79, 0x6e, 0x63,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x79, 0x6e,
	0x63, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f,
	0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x2a,
	0xf0, 0x01, 0x0a, 0x12, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x41, 0x54, 0x45, 0x57, 0x41,
	0x59, 0x5f, 0x48, 0x45, 0x4c, 0x4c, 0x4f, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x57, 0x4f, 0x52,
	0x4b, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x01, 0x12, 0x1c, 0x0a,
	0x18, 0x47, 0x41, 0x54, 0x45, 0x57, 0x41, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x47,
	0x41, 0x54, 0x45, 0x57, 0x41, 0x59, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x4f, 0x52, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x57, 0x4f, 0x52,
	0x4b, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x57,
	0x4f, 0x52, 0x4b, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x41, 0x43,
	0x4b, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x57, 0x4f, 0x52, 0x4b, 0x45, 0x52, 0x5f, 0x52, 0x45,
	0x50, 0x4c, 0x59, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x57, 0x4f, 0x52, 0x4b, 0x45, 0x52, 0x5f,
	0x50, 0x41, 0x55, 0x53, 0x45, 0x10, 0x07, 0x12, 0x14, 0x0a, 0x10, 0x57, 0x4f, 0x52, 0x4b, 0x45,
	0x52, 0x5f, 0x48, 0x45, 0x41, 0x52, 0x54, 0x42, 0x45, 0x41, 0x54, 0x10, 0x08, 0x12, 0x13, 0x0a,
	0x0f, 0x47, 0x41, 0x54, 0x45, 0x57, 0x41, 0x59, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x49, 0x4e, 0x47,
	0x10, 0x09, 0x2a, 0x3b, 0x0a, 0x11, 0x53, 0x44, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x43,
	0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x4f,
	0x4e, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x2a,
	0x4c, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x44, 0x52, 0x41, 0x49, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x44,
	0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x2d, 0x0a,
	0x16, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x13, 0x0a, 0x0f, 0x57, 0x4f, 0x52, 0x4b, 0x45,
	0x52, 0x5f, 0x53, 0x48, 0x55, 0x54, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x42, 0x39, 0x5a, 0x37,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x6e, 0x67, 0x65,
	0x73, 0x74, 0x2f, 0x69, 0x6e, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x3b,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_connect_v1_connect_proto_rawDescOnce sync.Once
	file_connect_v1_connect_proto_rawDescData = file_connect_v1_connect_proto_rawDesc
)

func file_connect_v1_connect_proto_rawDescGZIP() []byte {
	file_connect_v1_connect_proto_rawDescOnce.Do(func() {
		file_connect_v1_connect_proto_rawDescData = protoimpl.X.CompressGZIP(file_connect_v1_connect_proto_rawDescData)
	})
	return file_connect_v1_connect_proto_rawDescData
}

var file_connect_v1_connect_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_connect_v1_connect_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_connect_v1_connect_proto_goTypes = []any{
	(GatewayMessageType)(0),            // 0: connect.v1.GatewayMessageType
	(SDKResponseStatus)(0),             // 1: connect.v1.SDKResponseStatus
	(ConnectionStatus)(0),              // 2: connect.v1.ConnectionStatus
	(WorkerDisconnectReason)(0),        // 3: connect.v1.WorkerDisconnectReason
	(*ConnectMessage)(nil),             // 4: connect.v1.ConnectMessage
	(*SessionIdentifier)(nil),          // 5: connect.v1.SessionIdentifier
	(*SessionDetails)(nil),             // 6: connect.v1.SessionDetails
	(*ConfigDetails)(nil),              // 7: connect.v1.ConfigDetails
	(*AuthData)(nil),                   // 8: connect.v1.AuthData
	(*WorkerConnectRequestData)(nil),   // 9: connect.v1.WorkerConnectRequestData
	(*GatewaySyncRequestData)(nil),     // 10: connect.v1.GatewaySyncRequestData
	(*GatewayExecutorRequestData)(nil), // 11: connect.v1.GatewayExecutorRequestData
	(*WorkerRequestAckData)(nil),       // 12: connect.v1.WorkerRequestAckData
	(*SDKResponse)(nil),                // 13: connect.v1.SDKResponse
	(*ConnMetadata)(nil),               // 14: connect.v1.ConnMetadata
	(*SystemAttributes)(nil),           // 15: connect.v1.SystemAttributes
	(*ConnGroup)(nil),                  // 16: connect.v1.ConnGroup
	(*timestamppb.Timestamp)(nil),      // 17: google.protobuf.Timestamp
}
var file_connect_v1_connect_proto_depIdxs = []int32{
	0,  // 0: connect.v1.ConnectMessage.kind:type_name -> connect.v1.GatewayMessageType
	5,  // 1: connect.v1.SessionDetails.session_id:type_name -> connect.v1.SessionIdentifier
	5,  // 2: connect.v1.WorkerConnectRequestData.session_id:type_name -> connect.v1.SessionIdentifier
	8,  // 3: connect.v1.WorkerConnectRequestData.auth_data:type_name -> connect.v1.AuthData
	7,  // 4: connect.v1.WorkerConnectRequestData.config:type_name -> connect.v1.ConfigDetails
	15, // 5: connect.v1.WorkerConnectRequestData.system_attributes:type_name -> connect.v1.SystemAttributes
	1,  // 6: connect.v1.SDKResponse.status:type_name -> connect.v1.SDKResponseStatus
	2,  // 7: connect.v1.ConnMetadata.status:type_name -> connect.v1.ConnectionStatus
	17, // 8: connect.v1.ConnMetadata.last_heartbeat_at:type_name -> google.protobuf.Timestamp
	15, // 9: connect.v1.ConnMetadata.attributes:type_name -> connect.v1.SystemAttributes
	14, // 10: connect.v1.ConnGroup.conns:type_name -> connect.v1.ConnMetadata
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_connect_v1_connect_proto_init() }
func file_connect_v1_connect_proto_init() {
	if File_connect_v1_connect_proto != nil {
		return
	}
	file_connect_v1_connect_proto_msgTypes[1].OneofWrappers = []any{}
	file_connect_v1_connect_proto_msgTypes[5].OneofWrappers = []any{}
	file_connect_v1_connect_proto_msgTypes[6].OneofWrappers = []any{}
	file_connect_v1_connect_proto_msgTypes[7].OneofWrappers = []any{}
	file_connect_v1_connect_proto_msgTypes[8].OneofWrappers = []any{}
	file_connect_v1_connect_proto_msgTypes[9].OneofWrappers = []any{}
	file_connect_v1_connect_proto_msgTypes[12].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_connect_v1_connect_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_connect_v1_connect_proto_goTypes,
		DependencyIndexes: file_connect_v1_connect_proto_depIdxs,
		EnumInfos:         file_connect_v1_connect_proto_enumTypes,
		MessageInfos:      file_connect_v1_connect_proto_msgTypes,
	}.Build()
	File_connect_v1_connect_proto = out.File
	file_connect_v1_connect_proto_rawDesc = nil
	file_connect_v1_connect_proto_goTypes = nil
	file_connect_v1_connect_proto_depIdxs = nil
}
