// Code generated by "enumer -trimprefix=WorkerConnectionTimeField -type=WorkerConnectionTimeField -transform=snake -json -text"; DO NOT EDIT.

package enums

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _WorkerConnectionTimeFieldName = "connected_atdisconnected_atlast_heartbeat_at"

var _WorkerConnectionTimeFieldIndex = [...]uint8{0, 12, 27, 44}

const _WorkerConnectionTimeFieldLowerName = "connected_atdisconnected_atlast_heartbeat_at"

func (i WorkerConnectionTimeField) String() string {
	if i < 0 || i >= WorkerConnectionTimeField(len(_WorkerConnectionTimeFieldIndex)-1) {
		return fmt.Sprintf("WorkerConnectionTimeField(%d)", i)
	}
	return _WorkerConnectionTimeFieldName[_WorkerConnectionTimeFieldIndex[i]:_WorkerConnectionTimeFieldIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _WorkerConnectionTimeFieldNoOp() {
	var x [1]struct{}
	_ = x[WorkerConnectionTimeFieldConnectedAt-(0)]
	_ = x[WorkerConnectionTimeFieldDisconnectedAt-(1)]
	_ = x[WorkerConnectionTimeFieldLastHeartbeatAt-(2)]
}

var _WorkerConnectionTimeFieldValues = []WorkerConnectionTimeField{WorkerConnectionTimeFieldConnectedAt, WorkerConnectionTimeFieldDisconnectedAt, WorkerConnectionTimeFieldLastHeartbeatAt}

var _WorkerConnectionTimeFieldNameToValueMap = map[string]WorkerConnectionTimeField{
	_WorkerConnectionTimeFieldName[0:12]:       WorkerConnectionTimeFieldConnectedAt,
	_WorkerConnectionTimeFieldLowerName[0:12]:  WorkerConnectionTimeFieldConnectedAt,
	_WorkerConnectionTimeFieldName[12:27]:      WorkerConnectionTimeFieldDisconnectedAt,
	_WorkerConnectionTimeFieldLowerName[12:27]: WorkerConnectionTimeFieldDisconnectedAt,
	_WorkerConnectionTimeFieldName[27:44]:      WorkerConnectionTimeFieldLastHeartbeatAt,
	_WorkerConnectionTimeFieldLowerName[27:44]: WorkerConnectionTimeFieldLastHeartbeatAt,
}

var _WorkerConnectionTimeFieldNames = []string{
	_WorkerConnectionTimeFieldName[0:12],
	_WorkerConnectionTimeFieldName[12:27],
	_WorkerConnectionTimeFieldName[27:44],
}

// WorkerConnectionTimeFieldString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func WorkerConnectionTimeFieldString(s string) (WorkerConnectionTimeField, error) {
	if val, ok := _WorkerConnectionTimeFieldNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _WorkerConnectionTimeFieldNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to WorkerConnectionTimeField values", s)
}

// WorkerConnectionTimeFieldValues returns all values of the enum
func WorkerConnectionTimeFieldValues() []WorkerConnectionTimeField {
	return _WorkerConnectionTimeFieldValues
}

// WorkerConnectionTimeFieldStrings returns a slice of all String values of the enum
func WorkerConnectionTimeFieldStrings() []string {
	strs := make([]string, len(_WorkerConnectionTimeFieldNames))
	copy(strs, _WorkerConnectionTimeFieldNames)
	return strs
}

// IsAWorkerConnectionTimeField returns "true" if the value is listed in the enum definition. "false" otherwise
func (i WorkerConnectionTimeField) IsAWorkerConnectionTimeField() bool {
	for _, v := range _WorkerConnectionTimeFieldValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for WorkerConnectionTimeField
func (i WorkerConnectionTimeField) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for WorkerConnectionTimeField
func (i *WorkerConnectionTimeField) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("WorkerConnectionTimeField should be a string, got %s", data)
	}

	var err error
	*i, err = WorkerConnectionTimeFieldString(s)
	return err
}

// MarshalText implements the encoding.TextMarshaler interface for WorkerConnectionTimeField
func (i WorkerConnectionTimeField) MarshalText() ([]byte, error) {
	return []byte(i.String()), nil
}

// UnmarshalText implements the encoding.TextUnmarshaler interface for WorkerConnectionTimeField
func (i *WorkerConnectionTimeField) UnmarshalText(text []byte) error {
	var err error
	*i, err = WorkerConnectionTimeFieldString(string(text))
	return err
}
